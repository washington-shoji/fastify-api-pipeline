name: Production Deployment CI

on:
  push:
    branches: [production]
  pull_request:
    branches: [production]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: |
          docker build -t fastify-api .

      - name: Save Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./fastify-api.tar
          run: |
            docker save fastify-api > ./fastify-api.tar

  deploy: 
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./fastify-api.tar

      - name: Load Docker image
        run: docker load < ./fastify-api.tar

      - name: Deploy to AWS Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.S3_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          DOCKER_TAG: 'latest'
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
        run: |
          eb init -p docker fastify-api --region $AWS_REGION
          eb create --single --instance_type t2.micro fastify-api-env
          eb setenv DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }} JWT_SECRET=${{ secrets.JWT_SECRET }} REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} S3_BUCKET=${{ secrets.S3_BUCKET }}
          eb deploy